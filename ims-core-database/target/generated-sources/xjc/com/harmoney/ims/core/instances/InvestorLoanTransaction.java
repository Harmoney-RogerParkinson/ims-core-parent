//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2017.01.31 at 04:16:09 PM NZDT 
//


package com.harmoney.ims.core.instances;

import javax.persistence.Basic;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;
import javax.persistence.Id;
import javax.persistence.Inheritance;
import javax.persistence.InheritanceType;
import javax.persistence.Table;
import javax.persistence.Version;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;
import org.jvnet.jaxb2_commons.lang.Equals;
import org.jvnet.jaxb2_commons.lang.EqualsStrategy;
import org.jvnet.jaxb2_commons.lang.HashCode;
import org.jvnet.jaxb2_commons.lang.HashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBEqualsStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBHashCodeStrategy;
import org.jvnet.jaxb2_commons.lang.JAXBToStringStrategy;
import org.jvnet.jaxb2_commons.lang.ToString;
import org.jvnet.jaxb2_commons.lang.ToStringStrategy;
import org.jvnet.jaxb2_commons.locator.ObjectLocator;
import org.jvnet.jaxb2_commons.locator.util.LocatorUtils;


/**
 * <p>Java class for InvestorLoanTransaction complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="InvestorLoanTransaction">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;sequence>
 *         &lt;element name="id" type="{http://www.w3.org/2001/XMLSchema}long"/>
 *         &lt;element name="version" type="{http://www.w3.org/2001/XMLSchema}long"/>
 *         &lt;element name="accountId" type="{http://www.w3.org/2001/XMLSchema}long"/>
 *         &lt;element name="netAmount" type="{http://www.w3.org/2001/XMLSchema}double"/>
 *         &lt;element name="transactionType" type="{http://www.harmoney.com/ims-core}ItemType"/>
 *       &lt;/sequence>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "InvestorLoanTransaction", propOrder = {
    "id",
    "version",
    "accountId",
    "netAmount",
    "transactionType"
})
@Entity(name = "InvestorLoanTransaction")
@Table(name = "INVESTORLOANTRANSACTION")
@Inheritance(strategy = InheritanceType.JOINED)
public class InvestorLoanTransaction
    implements Equals, HashCode, ToString
{

    protected long id;
    protected long version;
    protected long accountId;
    protected double netAmount;
    @XmlElement(required = true)
    protected ItemType transactionType;

    /**
     * Gets the value of the id property.
     * 
     */
    @Id
    @Column(name = "ID", scale = 0)
    public long getId() {
        return id;
    }

    /**
     * Sets the value of the id property.
     * 
     */
    public void setId(long value) {
        this.id = value;
    }

    /**
     * Gets the value of the version property.
     * 
     */
    @Version
    @Column(name = "VERSION_", scale = 0)
    public long getVersion() {
        return version;
    }

    /**
     * Sets the value of the version property.
     * 
     */
    public void setVersion(long value) {
        this.version = value;
    }

    /**
     * Gets the value of the accountId property.
     * 
     */
    @Basic
    @Column(name = "ACCOUNTID", precision = 20, scale = 0)
    public long getAccountId() {
        return accountId;
    }

    /**
     * Sets the value of the accountId property.
     * 
     */
    public void setAccountId(long value) {
        this.accountId = value;
    }

    /**
     * Gets the value of the netAmount property.
     * 
     */
    @Basic
    @Column(name = "NETAMOUNT", precision = 20, scale = 10)
    public double getNetAmount() {
        return netAmount;
    }

    /**
     * Sets the value of the netAmount property.
     * 
     */
    public void setNetAmount(double value) {
        this.netAmount = value;
    }

    /**
     * Gets the value of the transactionType property.
     * 
     * @return
     *     possible object is
     *     {@link ItemType }
     *     
     */
    @Basic
    @Column(name = "TRANSACTIONTYPE", length = 255)
    @Enumerated(EnumType.STRING)
    public ItemType getTransactionType() {
        return transactionType;
    }

    /**
     * Sets the value of the transactionType property.
     * 
     * @param value
     *     allowed object is
     *     {@link ItemType }
     *     
     */
    public void setTransactionType(ItemType value) {
        this.transactionType = value;
    }

    public boolean equals(ObjectLocator thisLocator, ObjectLocator thatLocator, Object object, EqualsStrategy strategy) {
        if (!(object instanceof InvestorLoanTransaction)) {
            return false;
        }
        if (this == object) {
            return true;
        }
        final InvestorLoanTransaction that = ((InvestorLoanTransaction) object);
        {
            long lhsId;
            lhsId = (true?this.getId(): 0L);
            long rhsId;
            rhsId = (true?that.getId(): 0L);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "id", lhsId), LocatorUtils.property(thatLocator, "id", rhsId), lhsId, rhsId)) {
                return false;
            }
        }
        {
            long lhsVersion;
            lhsVersion = (true?this.getVersion(): 0L);
            long rhsVersion;
            rhsVersion = (true?that.getVersion(): 0L);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "version", lhsVersion), LocatorUtils.property(thatLocator, "version", rhsVersion), lhsVersion, rhsVersion)) {
                return false;
            }
        }
        {
            long lhsAccountId;
            lhsAccountId = (true?this.getAccountId(): 0L);
            long rhsAccountId;
            rhsAccountId = (true?that.getAccountId(): 0L);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "accountId", lhsAccountId), LocatorUtils.property(thatLocator, "accountId", rhsAccountId), lhsAccountId, rhsAccountId)) {
                return false;
            }
        }
        {
            double lhsNetAmount;
            lhsNetAmount = (true?this.getNetAmount(): 0.0D);
            double rhsNetAmount;
            rhsNetAmount = (true?that.getNetAmount(): 0.0D);
            if (!strategy.equals(LocatorUtils.property(thisLocator, "netAmount", lhsNetAmount), LocatorUtils.property(thatLocator, "netAmount", rhsNetAmount), lhsNetAmount, rhsNetAmount)) {
                return false;
            }
        }
        {
            ItemType lhsTransactionType;
            lhsTransactionType = this.getTransactionType();
            ItemType rhsTransactionType;
            rhsTransactionType = that.getTransactionType();
            if (!strategy.equals(LocatorUtils.property(thisLocator, "transactionType", lhsTransactionType), LocatorUtils.property(thatLocator, "transactionType", rhsTransactionType), lhsTransactionType, rhsTransactionType)) {
                return false;
            }
        }
        return true;
    }

    public boolean equals(Object object) {
        final EqualsStrategy strategy = JAXBEqualsStrategy.INSTANCE;
        return equals(null, null, object, strategy);
    }

    public String toString() {
        final ToStringStrategy strategy = JAXBToStringStrategy.INSTANCE;
        final StringBuilder buffer = new StringBuilder();
        append(null, buffer, strategy);
        return buffer.toString();
    }

    public StringBuilder append(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        strategy.appendStart(locator, this, buffer);
        appendFields(locator, buffer, strategy);
        strategy.appendEnd(locator, this, buffer);
        return buffer;
    }

    public StringBuilder appendFields(ObjectLocator locator, StringBuilder buffer, ToStringStrategy strategy) {
        {
            long theId;
            theId = (true?this.getId(): 0L);
            strategy.appendField(locator, this, "id", buffer, theId);
        }
        {
            long theVersion;
            theVersion = (true?this.getVersion(): 0L);
            strategy.appendField(locator, this, "version", buffer, theVersion);
        }
        {
            long theAccountId;
            theAccountId = (true?this.getAccountId(): 0L);
            strategy.appendField(locator, this, "accountId", buffer, theAccountId);
        }
        {
            double theNetAmount;
            theNetAmount = (true?this.getNetAmount(): 0.0D);
            strategy.appendField(locator, this, "netAmount", buffer, theNetAmount);
        }
        {
            ItemType theTransactionType;
            theTransactionType = this.getTransactionType();
            strategy.appendField(locator, this, "transactionType", buffer, theTransactionType);
        }
        return buffer;
    }

    public int hashCode(ObjectLocator locator, HashCodeStrategy strategy) {
        int currentHashCode = 1;
        {
            long theId;
            theId = (true?this.getId(): 0L);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "id", theId), currentHashCode, theId);
        }
        {
            long theVersion;
            theVersion = (true?this.getVersion(): 0L);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "version", theVersion), currentHashCode, theVersion);
        }
        {
            long theAccountId;
            theAccountId = (true?this.getAccountId(): 0L);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "accountId", theAccountId), currentHashCode, theAccountId);
        }
        {
            double theNetAmount;
            theNetAmount = (true?this.getNetAmount(): 0.0D);
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "netAmount", theNetAmount), currentHashCode, theNetAmount);
        }
        {
            ItemType theTransactionType;
            theTransactionType = this.getTransactionType();
            currentHashCode = strategy.hashCode(LocatorUtils.property(locator, "transactionType", theTransactionType), currentHashCode, theTransactionType);
        }
        return currentHashCode;
    }

    public int hashCode() {
        final HashCodeStrategy strategy = JAXBHashCodeStrategy.INSTANCE;
        return this.hashCode(null, strategy);
    }

}
